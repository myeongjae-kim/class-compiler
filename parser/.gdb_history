p ppexpr(tok)
p ppexpr(statement)
p ppexpr(label)
p ppexpr(count_assign )
p ppexpr(if_token )
p ppexpr(if_token->link)
p ppexpr(if_token->operator->link)
p ppexpr(if_token->operands->link)
p ppexpr(comp_token->link)
p ppexpr(if_token->operands->link))
p ppexpr(if_token->operands->link)
make parser
make parser
run < pasrec.pas
make parser
run < graph1.pas
c
make parser
make parser
run < graph1.pas
c
run < pasrec.pas
b makeprogram
run < graph1.pas
c
p ppexpr(statements)
p ppexpr(name)
p ppexpr(args)
info b
d 4
run < graph1.pas
n
p ppexpr(asg)
p ppexpr(if_token)
make parser
run graph1.pas
run < graph1.pas
c
make parser
make parser
run < graph1.pas
c
make parser
make parser
run < graph1.pas
p ppexpr(progn_tok)
make parser
run
p ppexpr(link_iter)
p ppexpr(progn_tok)
make parser
run
p ppexpr(link_iter)
p ppexpr(progn_tok))
p ppexpr(progn_tok)
p ppexpr(progn_tok->operands->link)
p ppexpr(progn_tok->operands->link->operands)
p ppexpr(progn_tok->operands->link->operands->link)
make parser
run
p link_iter
p ppexpr(link_iter)
p ppexpr(progn_tok)
p ppexpr(progn_tok->operands->link->link)
make parser
run
p ppexpr(progn_tok)
b makerepeat
run
make parser
run
n
p ppexpr(label)
p ppexpr(progn)
p label
p *label
p ppexpr(label)
p ppexpr(empty_progn )
p ppexpr(progn)
p ppexpr(expr)
p ppexpr(link)
p ppexpr(link)
p ppexpr(label)
p *label
p *label->operands
p *empty_progn
p *empty_progn->link
p ppexpr(empty_progn)
p ppexpr(empty_progn->link)
run
n
p ppexpr(progn)
n
p ppexpr(empty_progn)
p ppexpr(empty_progn->link)
n
n
p ppexpr(empty_progn->link)
kill
run < graph1.pas
c
c
c
run < graph1.pas
c
c
make parser
run
c
c
run
c
c
make parser
run
c
p *progn_tok
p *progn_tok->operands
make parser
run
c
b optimize_progn 
run
kill
run
c
p ppexpr(progn_tok)
c
p ppexpr(progn_tok)
c
p ppexpr(progn_tok)
c
p ppexpr(progn_tok)
c
p ppexpr(progn_tok)
make parser
run
c
make parser
run
c
make parser
run
c
run
display progn_tok
c
p ppexpr(progn_tok)
c
p ppexpr(progn_tok)
c
p ppexpr(progn_tok)
c
n
up
p ppexpr(tok)
kill
make parser
run
c
make parser
run
c
b makeprogn
info b
d 3
d 5
d 6
run
:q
p ppexpr(tok)
c
p ppexpr(tok)
p ppexpr(statement
p ppexpr(statement)
p ppexpr(statements)
c
p ppexpr(statements)
c
p ppexpr(statements)
n
p ppexpr(statements)
p ppexpr(tok)
make parser
kill
run
c
make parser
run
n
c
n
display *statements
c
kill
make parser
run
c
make parser
run
d 7
c
make parser
run
make parser
b makerepeat 
run
n
p ppexpr(if_token)
p ppexpr(label)
n
make parser
run
c
make parser
run
c
b makeprogram
run
c
run
c
p ppexpr(statements)
make parser
run
c
make parser
b 119
run
c
run
c
n
n
n
n
n
n
n
n
n
n
n
n
n
p ppexpr($$)
p ppexpr($$)
s
p ppexpr(statements)
p *statements
n
p ppexpr(tok)
make parser
run
c
kill
